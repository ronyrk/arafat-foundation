// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Branch {
  id                   String   @id @default(auto()) @map("_id") @db.ObjectId
  code                 String   @unique
  username             String   @unique
  email                String   @unique
  branchName           String
  district             String
  ps                   String
  password             String
  address              String
  photoUrl             String[]
  teamLeaderName       String
  teamLeaderPhone      String
  teamLeaderAddress    String
  teamLeaderOccupation String
  teamLeaderPhotoUrl   String
  presidentName        String
  presidentAddress     String
  presidentPhone       String
  presidentOccupation  String
  ImamName             String
  ImamAddress          String
  ImamPhone            String
  ImamOccupation       String
  SecretaryName        String
  SecretaryAddress     String
  SecretaryPhone       String
  SecretaryOccupation  String
  status               String   @default("BRANCH")
}

model Member {
  id                   String @id @default(auto()) @map("_id") @db.ObjectId
  branch               String
  teamMemberName       String
  teamMemberPhone      String
  teamMemberAddress    String
  teamMemberOccupation String
  teamMemberPhotoUrl   String
}

model Loan {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  username   String  @unique
  name       String
  code       String
  branch     String
  address    String
  about      String?
  disbursed  String?
  recovered  String?
  balance    String
  form1      String
  form2      String
  nidfont    String
  nidback    String
  occupation String
  phone      String
  photosUrl  String
  status     Status  @default(RUNNING)
}

model Admin {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String @unique
  password String
  photourl String
  username String @unique
}

model Donor {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  username     String  @unique
  email        String  @unique
  code         String  @unique
  password     String
  name         String
  photoUrl     String
  about        String
  amount       String?
  lives        String
  hometown     String
  status       String
  socailMedia1 String
  socailMedia2 String
  mobile       String
}

model Request {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  loanusername String
  photoUrl     String
  amount       String
  method       String
  createAt     DateTime
}

model payment {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  loanusername String
  amount       String
  loanAmount   String
  createAt     DateTime
}

model DonorPayment {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  donorUsername String
  amount        String?
  loanPayment   String?
  donate        String?
  type          String
  createAt      DateTime
  returnDate    DateTime?
  upComing      Boolean   @default(true)
}

model Faq {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
}

model Project {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  createAt           DateTime @default(now())
  author             String
  photoUrl           String
  shortDes           String
  description        String
  title              String
  paymentInfo        String
  outsidePaymentInfo String
  link               String
  username           String   @unique
}

model News {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  createAt    DateTime @default(now())
  photoUrl    String
  description String
  title       String
  username    String   @unique
  shortDes    String
}

model DonationChild {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  username String
  email    String
  amount   String
  method   String?
  photoUrl String?
  about    String?
  createAt DateTime @default(now())
}

model Donation {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  username String
  email    String
  amount   String
  method   String?
  photoUrl String?
  about    String?
  createAt DateTime @default(now())
}

model ChildsDonateRequest {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  childName   String
  name        String
  email       String
  amount      String
  method      String?
  photoUrl    String?
  about       String?
  transaction String?
  sendNumber  String?
  type        String
  createAt    DateTime @default(now())
}

model ChildsDonate {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  childName   String
  name        String
  email       String
  amount      String
  method      String?
  photoUrl    String?
  about       String?
  transaction String?
  sendNumber  String?
  type        String
  createAt    DateTime @default(now())
}

model Child {
  id                 String @id @default(auto()) @map("_id") @db.ObjectId
  username           String @unique
  name               String
  photoUrl           String
  description        String
  shortDes           String
  dream              String
  phone              String
  address            String
  academy            String
  paymentInfo        String
  outsidePaymentInfo String
  link               String
}

model disbursement {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  date        String
  description String
  username    String
  amount      String
}

model Gallery {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  category String
  content  String
}

model Category {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique
  path String @unique
}

model ProjectDonateRequest {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  projectName String
  name        String
  email       String
  amount      String
  method      String?
  photoUrl    String?
  about       String?
  transaction String?
  sendNumber  String?
  type        String
  createAt    DateTime @default(now())
}

model Donate {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  projectName String
  name        String
  email       String
  amount      String
  method      String?
  photoUrl    String?
  about       String?
  transaction String?
  sendNumber  String?
  type        String
  createAt    DateTime @default(now())
}

model Income {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  date        DateTime
  type        String
  transaction String
  amount      String
}

model Expenses {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  date        String
  description String
  amount      String
}

model All_links {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  type String
  name String
  path String
}

model Owner {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  type        String
  name        String
  position    String
  photos      String
  facebook    String
  linkedin    String
  mobile      String
  description String
}

model donor_request {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  phone         String
  amount        String
  method        String
  photoUrl      String
  about         String?
  lives         String
  hometown      String?
  return_date   String
  sendNumber    String?
  transactionId String?
  invoice       String?
  createAt      DateTime @default(now())
}

model donor_payment_request {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  username      String   @unique
  amount        String
  method        String
  return_date   String
  sendNumber    String?
  transactionId String?
  invoice       String?
  createAt      DateTime @default(now())
}

model district {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  name           String          @unique
  policeStations policeStation[]
  createdAt      DateTime        @default(now())
}

model policeStation {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  districtId String   @db.ObjectId
  district   district @relation(fields: [districtId], references: [id])
  createdAt  DateTime @default(now())

  @@index([districtId])
}

model beneficialDonor {
  id                    String                  @id @default(auto()) @map("_id") @db.ObjectId
  name                  String
  username              String                  @unique
  live                  String
  homeTown              String
  photoUrl              String
  about                 String?
  beneficialTransaction beneficialTransaction[]
  beneficial            beneficial[]
  createAt              DateTime                @default(now())
}

model beneficial {
  id                    String                  @id @default(auto()) @map("_id") @db.ObjectId
  name                  String
  username              String                  @unique
  phone                 String
  village               String
  postoffice            String
  district              String
  policeStation         String
  occupation            String
  nidFront              String
  nidBack               String
  photoUrl              String[]
  about                 String?
  beneficialTransaction beneficialTransaction[]
  beneficialDonorId     String?                 @db.ObjectId
  beneficialDonor       beneficialDonor?        @relation(fields: [beneficialDonorId], references: [id])
  createAt              DateTime                @default(now())

  @@index([beneficialDonorId])
}

model beneficialTransaction {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  beneficialId      String          @db.ObjectId
  beneficial        beneficial      @relation(fields: [beneficialId], references: [id])
  amount            String
  description       String
  date              DateTime
  beneficialDonorId String          @db.ObjectId
  beneficialDonor   beneficialDonor @relation(fields: [beneficialDonorId], references: [id])

  @@index([beneficialId, beneficialDonorId])
}

model beneficialQuestion {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
}

enum Status {
  PENDING
  RUNNING
  COMPLETED
}

enum PaymentType {
  LENDING
  DONATE
  REFOUND
}
